#include <stdio.h>

int findOptimal(int pages[], int frame[], int n, int index, int fsize) {
    int pos = -1, farthest = index;
    for(int i=0;i<fsize;i++) {
        int j;
        for(j=index;j<n;j++) {
            if(frame[i] == pages[j]) {
                if(j > farthest) {
                    farthest = j;
                    pos = i;
                }
                break;
            }
        }
        if(j == n) return i;
    }
    return (pos == -1) ? 0 : pos;
}

int main() {
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4};
    int n = 8, frame[3], pf = 0;
    for(int i=0;i<3;i++) frame[i] = -1;

    for(int i=0;i<n;i++) {
        int found = 0;
        for(int j=0;j<3;j++)
            if(frame[j] == pages[i]) found = 1;
        if(!found) {
            int pos = -1;
            for(int j=0;j<3;j++)
                if(frame[j] == -1) { pos = j; break; }
            if(pos == -1) pos = findOptimal(pages, frame, n, i+1, 3);
            frame[pos] = pages[i];
            pf++;
        }
        printf("Frames: ");
        for(int j=0;j<3;j++) printf("%d ", frame[j]);
        printf("\n");
    }
    printf("Total Page Faults = %d\n", pf);
    return 0;
}



sample output:
Frames: 7 -1 -1
Frames: 7 0 -1
Frames: 7 0 1
Frames: 2 0 1
Frames: 2 0 1
Frames: 2 3 1
Frames: 2 3 0
Frames: 4 3 0
Total Page Faults = 6

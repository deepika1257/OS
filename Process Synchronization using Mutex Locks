#include <stdio.h>
#include <pthread.h>

pthread_mutex_t lock;
int counter = 0;

void* func(void* arg) {
    pthread_mutex_lock(&lock);
    counter++;
    printf("Thread %d incremented counter to %d\n", *(int*)arg, counter);
    pthread_mutex_unlock(&lock);
    return NULL;
}

int main() {
    pthread_t t1, t2;
    int id1=1, id2=2;
    pthread_mutex_init(&lock, NULL);

    pthread_create(&t1, NULL, func, &id1);
    pthread_create(&t2, NULL, func, &id2);
    pthread_join(t1, NULL);
    pthread_join(t2, NULL);

    pthread_mutex_destroy(&lock);
    printf("Final Counter: %d\n", counter);
    return 0;
}


sample output:
Thread 1 incremented counter to 1
Thread 2 incremented counter to 2
Final Counter: 2

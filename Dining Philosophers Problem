#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

#define N 5
sem_t chopstick[N];

void* philosopher(void* num) {
    int id = *(int*)num;
    sem_wait(&chopstick[id]);
    sem_wait(&chopstick[(id+1)%N]);
    printf("Philosopher %d is eating\n", id+1);
    sem_post(&chopstick[(id+1)%N]);
    sem_post(&chopstick[id]);
    printf("Philosopher %d finished eating\n", id+1);
    return NULL;
}

int main() {
    pthread_t tid[N];
    int i, id[N];
    for(i=0;i<N;i++) sem_init(&chopstick[i],0,1);
    for(i=0;i<N;i++) {
        id[i]=i;
        pthread_create(&tid[i],NULL,philosopher,&id[i]);
    }
    for(i=0;i<N;i++) pthread_join(tid[i],NULL);
    printf("Dinner over.\n");
    return 0;
}


sample output:
Philosopher 1 is eating
Philosopher 1 finished eating
Philosopher 2 is eating
Philosopher 2 finished eating
...
Dinner over.

#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>

sem_t empty, full;
int item = 0;

void* producer(void* arg) {
    for(int i=1;i<=3;i++) {
        sem_wait(&empty);
        item = i;
        printf("Produced item %d\n", item);
        sem_post(&full);
        sleep(1);
    }
    return NULL;
}

void* consumer(void* arg) {
    for(int i=1;i<=3;i++) {
        sem_wait(&full);
        printf("Consumed item %d\n", item);
        sem_post(&empty);
        sleep(1);
    }
    return NULL;
}

int main() {
    pthread_t p, c;
    sem_init(&empty,0,1);
    sem_init(&full,0,0);
    pthread_create(&p,NULL,producer,NULL);
    pthread_create(&c,NULL,consumer,NULL);
    pthread_join(p,NULL);
    pthread_join(c,NULL);
    printf("Production and consumption completed.\n");
    return 0;
}


sample output:
Produced item 1
Consumed item 1
Produced item 2
Consumed item 2
Produced item 3
Consumed item 3
Production and consumption completed.
